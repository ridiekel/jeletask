#!/usr/bin/env bash

mkdir -p /tmp/.m2

if ! docker run -it --rm \
       -v "$PWD":/src \
       -v "/var/run/docker.sock:/var/run/docker.sock" \
       -v "/tmp/.m2":/root/.m2 \
       -w /src \
       maven:latest \
       mvn versions:set; then
    echo "Setting version failed!"
    exit 255
fi

VERSION=$(grep "version>" jeletask2mqtt/pom.xml | head -1|cut -d'>' -f 2|cut -d'<' -f 1)

if ! docker run -it --rm \
       -v "$PWD":/src \
       -v "/var/run/docker.sock:/var/run/docker.sock" \
       -v "/tmp/.m2":/root/.m2 \
       -w /src \
       maven:latest \
       mvn clean install verify spring-boot:build-image; then
    echo "Native build failed!"
    exit 255
fi

if ! docker run -it --rm \
       -v "$PWD":/src \
       -v "/var/run/docker.sock:/var/run/docker.sock" \
       -v "/tmp/.m2":/root/.m2 \
       -w /src \
       maven:latest \
       mvn clean install verify; then
    echo "Multi arch build failed!"
    exit 255
fi

TMP_BUILD_DIR=/tmp/jeletaskbuild

rm -rf ${TMP_BUILD_DIR}
mkdir -p ${TMP_BUILD_DIR}/target
cp jeletask2mqtt-normal/target/jeletask2mqtt-normal-*.jar ${TMP_BUILD_DIR}/target


export BUILDPLATFORM=linux/arm64/v8
envsubst '${BUILDPLATFORM}' < jeletask2mqtt-normal/Dockerfile > ${TMP_BUILD_DIR}/Dockerfile

echo "---------------------------------------------------------------------"
cat ${TMP_BUILD_DIR}/Dockerfile
echo "---------------------------------------------------------------------"

(cd "${TMP_BUILD_DIR}" && docker buildx build --push \
  -t ridiekel/jeletask2mqtt:latest-arm64 \
  -t "ridiekel/jeletask2mqtt:$VERSION-arm64" \
  --platform "${BUILDPLATFORM}" .)

export BUILDPLATFORM=linux/amd64
envsubst '${BUILDPLATFORM}' < jeletask2mqtt-normal/Dockerfile > ${TMP_BUILD_DIR}/Dockerfile

echo "---------------------------------------------------------------------"
cat ${TMP_BUILD_DIR}/Dockerfile
echo "---------------------------------------------------------------------"

(cd "${TMP_BUILD_DIR}" && docker buildx build --push \
  -t ridiekel/jeletask2mqtt:latest-amd64 \
  -t "ridiekel/jeletask2mqtt:$VERSION-amd64" \
  --platform "${BUILDPLATFORM}" .)

docker push "ridiekel/jeletask2mqtt:$VERSION-native"
docker tag "ridiekel/jeletask2mqtt:$VERSION-native" ridiekel/jeletask2mqtt:latest-native
docker push ridiekel/jeletask2mqtt:latest-native

docker run -it --rm \
  -v "$PWD":/src \
  -v "/tmp/.m2":/root/.m2 \
  -w /src \
  maven:latest \
  mvn clean
